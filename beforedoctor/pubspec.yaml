name: beforedoctor
description: "Voice-driven health app for symptom logging, clinic prep (save 5-15 min/visit)."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.8.1 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # UI and Icons
  cupertino_icons: ^1.0.8
  
  # State Management (required by .cursorrules)
  flutter_riverpod: ^2.5.1
  hooks_riverpod: ^2.5.1
  
  # Voice & AI
  google_ml_kit: ^0.18.0  # Offline STT/translation
  google_mlkit_translation: ^0.11.1  # Offline translation
  google_mlkit_language_id: ^0.11.1  # Language detection
  speech_to_text: ^6.3.0  # Real-time voice input
  dart_openai: ^5.1.0  # OpenAI Realtime Audio (fallback)
  http: ^1.2.2  # xAI API, OpenWeather, ElevenLabs API calls
  
  # Data Storage
  sqflite: ^2.3.3  # Offline storage
  firebase_core: ^3.3.0  # Firebase
  firebase_auth: ^5.1.4  # Caregiver logins
  firebase_database: ^11.0.0  # Sync
  
  # UI Components
  flutter_animate: ^4.5.0  # Animations (FadeTransition)
  lottie: ^3.1.2  # Micro-interactions
  getwidget: ^4.0.0  # Modern UI components
  
  # Animated Character
  rive: ^0.12.4  # Rive animations
  flutter_tts: ^3.8.3  # Text-to-speech
  
  # AI Singing Response
  audio_session: ^0.1.18  # Audio session management
  just_audio: ^0.9.36  # Audio playback for singing
  
  # Features
  geolocator: ^12.0.0  # Location for insights
  intl: ^0.19.0  # Multilingual
  qr_flutter: ^4.1.0  # QR export
  flutter_dotenv: ^5.1.0  # API keys
  path: ^1.9.0  # File path handling
  
  # Platform-specific
  permission_handler: ^11.3.1  # iOS/Android permissions
  
  # 3D Character Integration
  webview_flutter: ^4.7.0  # WebView for 3D character rendering

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0
  mockito: ^5.4.4  # Unit testing
  build_runner: ^2.4.8
  sqflite_common_ffi: ^2.3.3  # For testing SQLite

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/animations/
    - assets/images/
    - assets/icons/
    - .env

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
